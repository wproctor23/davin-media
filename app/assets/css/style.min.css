/*!
 * fastshell
 * Fiercely quick and opinionated front-ends
 * https://HosseinKarami.github.io/fastshell
 * @author Hossein Karami
 * @version 1.0.5
 * Copyright 2017. MIT licensed.
 */
@import url("https://fonts.googleapis.com/css?family=Caudex|Crimson+Text|Roboto|Roboto+Condensed|Roboto+Slab");.clear:after,.clear:before{content:" ";display:table}.clear{*zoom:1}.clear:after{clear:both}*{box-sizing:border-box;font-smoothing:antialiased;text-rendering:optimizeLegibility}html{font-size:18px;background:radial-gradient(ellipse at center,#f7f6f0 0,#c2ba8c 80%,#b0a66b 100%)}body{font:300 13px/1.6 Helvetica Neue,Helvetica,Arial;color:#444;transition:all .4s ease-in .3s}body,html{min-height:100vh;overflow:auto}

/*! normalize.css v4.1.1 | MIT License | github.com/necolas/normalize.css */html{font-family:sans-serif;-ms-text-size-adjust:100%;-webkit-text-size-adjust:100%}body{margin:0}article,aside,details,figcaption,figure,footer,header,main,menu,nav,section,summary{display:block}audio,canvas,progress,video{display:inline-block}audio:not([controls]){display:none;height:0}progress{vertical-align:baseline}[hidden],template{display:none}a{background-color:transparent;-webkit-text-decoration-skip:objects}a:active,a:hover{outline-width:0}abbr[title]{border-bottom:none;text-decoration:underline;text-decoration:underline dotted}b,strong{font-weight:inherit;font-weight:bolder}dfn{font-style:italic}h1{font-size:2em;margin:.67em 0}mark{background-color:#ff0;color:#000}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sub{bottom:-.25em}sup{top:-.5em}img{border-style:none}svg:not(:root){overflow:hidden}code,kbd,pre,samp{font-family:monospace,monospace;font-size:1em}figure{margin:1em 40px}hr{box-sizing:content-box;height:0;overflow:visible}button,input,select,textarea{font:inherit;margin:0}optgroup{font-weight:700}button,input{overflow:visible}button,select{text-transform:none}[type=reset],[type=submit],button,html [type=button]{-webkit-appearance:button}[type=button]::-moz-focus-inner,[type=reset]::-moz-focus-inner,[type=submit]::-moz-focus-inner,button::-moz-focus-inner{border-style:none;padding:0}[type=button]:-moz-focusring,[type=reset]:-moz-focusring,[type=submit]:-moz-focusring,button:-moz-focusring{outline:1px dotted ButtonText}fieldset{border:1px solid silver;margin:0 2px;padding:.35em .625em .75em}legend{box-sizing:border-box;color:inherit;display:table;max-width:100%;padding:0;white-space:normal}textarea{overflow:auto}[type=checkbox],[type=radio]{box-sizing:border-box;padding:0}[type=number]::-webkit-inner-spin-button,[type=number]::-webkit-outer-spin-button{height:auto}[type=search]{-webkit-appearance:textfield;outline-offset:-2px}[type=search]::-webkit-search-cancel-button,[type=search]::-webkit-search-decoration{-webkit-appearance:none}::-webkit-input-placeholder{color:inherit;opacity:.54}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}.topLogo,header{background-color:#0ca38d}.topLogo{padding-top:15px}.topLogo img{padding-left:8px}.topNav{outline:1px solid blue;background-color:#0ca38d}.topNav a{color:#eee;font-family:Caudex,serif;padding-top:0}.topNav a:hover,.topSoc{color:#26c3d7}.topSoc{padding-top:11px;padding-right:19px}.topSoc a{font-size:25px;padding-left:10px}.topSoc a:hover{color:#26c3d7;background-color:#0ca38d}.splash{width:100%}.splash img{width:100%;height:auto}.nav ul{list-style:none}body{font-size:0}.container{display:-ms-flexbox;display:flex;-ms-flex-direction:column;flex-direction:column;width:75%;max-width:1350px}.whyDM{background-color:#0ca38d;color:#eee}.whyDM .whyDM-info{width:800px;text-align:center;margin:auto;padding:2em;font-size:1em;letter-spacing:2px;font-family:Crimson Text,serif}.seeMoreLink{font-family:Roboto,sans-serif;font-size:16px;border:1px solid;color:#eee;padding:10px}.seeMoreLink:hover{color:#6e6e6e}.icon-container{padding:2.5em}.icon-container h2{color:#0fb1d4;padding-top:10px}.servicesLink{font-family:Roboto,sans-serif;font-size:16px;border:1px solid;color:#0fb1d4;padding:10px}.servicesLink:hover{color:#6e6e6e}.icons{text-align:center;margin-bottom:20px}.testimony{background-color:#6e6e6e;color:#eee;font-family:Caudex,serif}.testimony p{font-family:Crimson Text,serif}.aboutDM{margin:20px;color:#0fb1d4;text-align:center}.aboutDM .aboutDM-info,.aboutDM h1{font-family:Crimson Text,serif}.aboutDM .aboutDM-info{width:800px;text-align:center;margin:15px auto;padding:20px 20px 0 0;font-size:1em;letter-spacing:2px}.aboutDM img{margin-left:20px;margin-top:20px}.aboutDM p{padding-right:205px;margin-top:10px}.servicesTitle{text-align:center;color:#0fb1d4;font-family:Crimson Text,serif;margin:auto;padding-top:30px}.topTwo{margin:0 auto;text-align:center;margin-bottom:15px}.topTwo h2{font-family:Roboto,sans-serif;font-size:30px;color:#0fb1d4;padding-top:10px}.topTwo .film{padding-left:170px}.topTwo .events{padding-right:170px}.botThree{text-align:center;margin-bottom:15px}.botThree h2{font-family:Roboto,sans-serif;font-size:30px;color:#0fb1d4;padding-top:10px}.contactTitle{text-align:center;color:#0fb1d4;font-family:Crimson Text,serif;margin:auto;padding-top:30px}.col-sm-8.emailForm{margin-top:30px;padding:20px 90px 20px 50px;font-family:Roboto,sans-serif}.col-sm-8.emailForm label{color:#0fb1d4}.col-sm-8.emailForm input{color:#6e6e6e}.col-sm-8.emailForm button{margin-left:-15px;background-color:#0fb1d4;border:none}.col-sm-8.emailForm button:hover{background-color:#6e6e6e}.col-sm-4.contactInfo{font-family:Roboto,sans-serif;margin:50px 0 0;padding:0 30px 0 0;text-align:right;color:#0fb1d4}.botLogo,footer{background-color:#0ca38d}.botLogo{padding-top:20px;padding-left:30px}.botLogo img{height:50px;width:auto;padding-left:10px}#lastLink{padding-right:0}.botNav{font-size:13px;background-color:#0ca38d;padding:0}.botNav a{color:#eee;padding:16px 20px 0;font-family:Caudex,serif}.botNav a:hover{color:#26c3d7}.botNav p{color:#eee;padding:20px 90px 0}.botInfo{background-color:#0ca38d;padding:10px 20px 0}.botInfo p{text-align:right;color:#eee;font-family:Roboto,sans-serif;font-size:12px;margin-bottom:0}.botSocial{padding:0;padding-left:5px}.botSocial a{color:#eee}.botSocial a:hover{color:#26c3d7}.designer{color:#eee;font-size:10px;padding-bottom:10px}.designer:hover{text-decoration:none;color:#26c3d7}h1{font-family:Caudex,serif}h2 h3 h4{font-family:Roboto,sans-serif}p{font-family:Crimson Text,serif}::selection{background:#333;color:#fff;text-shadow:none}::-moz-selection{background:#333;color:#fff;text-shadow:none}::-webkit-selection{background:#333;color:#fff;text-shadow:none}@media print{*{background:transparent!important;color:#000!important;box-shadow:none!important;text-shadow:none!important}a,a:visited{text-decoration:underline}a[href]:after{content:" (" attr(href) ")"}abbr[title]:after{content:" (" attr(title) ")"}.ir a:after,a[href^="#"]:after,a[href^="javascript:"]:after{content:""}blockquote,pre{border:1px solid #999;page-break-inside:avoid}thead{display:table-header-group}img,tr{page-break-inside:avoid}img{max-width:100%!important}@page{margin:.5cm}h2,h3,p{orphans:3;widows:3}h2,h3{page-break-after:avoid}}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
